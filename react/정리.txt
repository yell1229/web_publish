https://ko.legacy.reactjs.org/
https://reactjs.org/

1. 리엑트
==> 사용자 인터페이스(UI)를 만들기 위한 JavaScript 라이브러리(component)

- Meta(구, facebook)에서 2013년도 오픈소스로 공개, 2015년도에 React Native 출시
- 2019년도에 함수형태로 업데이트 됨, 그 전에는 클래스 기반이었음.
- 2022년 서버사이드 렌더링이 가능해짐

2. 리엑트 장점
- 빠른 업데이트와 렌더링 속도 : React DOM
- 컴포넌트 기반 구조 : 함수기반의 컴포넌트 생성
- 재 사용성 (함수기반의 컴포넌트)
- 든든한 지원군 : Meta(구, facebook)에서 서포트
- 활발한 지식공유 & 방대한 커뮤니티(NPM)

3. React 단점
- 방대한 학습량 : HTML, CSS 자바스크립트 기본 + React 문법
- 높은 상태 관리 복잡도 : React Hooks를 통한 상태 관리

4. React 프로젝트 생성 및 실행
    ) nodejs 설치가 선행되어져야 한다.(LTS version)
    2) npm 커뮤니티를 통해 React 앱(project)을 생성함
    3) React 앱 생성
        - npx create-react-app [생성할 앱 이름: snake type의 이름 사용]
        예) npx create-react-app my-app
    4) React 앱 실행
        - my-app 으로 이동 후 > npm start

5. React 실행 순서
    - npm start > src/index.js > App.js(컴포넌트의 첫글자는 대문자)

6. 컴포넌트(Component) : UI를 구성하는 블록을 만든다고 생각하면 됨.
    - UI를 구성하는 함수 컴포넌트
    - 첫 글자는  대문자로 정의. (카멜케이스)
    - return 키워드 다음에는 ()로 묶어준다.
    - return 되는 컴포넌트는 반드시 하나의 테그로 그룹핑되어 리턴된다.
      예) <div>, <> : 그룹핑만을 위한 테그
    - 로직을 실행하는 코드는 {} 묶어서 반환코드에 추가한다.

7. 터미널 프로그램 다운로드 및 설치
    1) 윈도우 : cmder
    2) mac : iterm2

